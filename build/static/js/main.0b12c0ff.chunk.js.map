{"version":3,"sources":["components/Header.js","components/Typography.js","containers/about-me/about-me-text.js","containers/about-me/index.js","containers/about-me/AboutMe.js","components/Card.js","containers/portfolio/Portfolio.js","containers/portfolio/index.js","containers/qualifications/Qualifications.js","utils/pagesList.js","containers/landing/Landing.js","containers/service-page/Service.js","components/Theme.js","App.js","serviceWorker.js","index.js"],"names":["StyledAppBar","styled","AppBar","StyledTab","Tab","StyledTabs","Tabs","Title","Typography","StyledTitleButton","ButtonBase","props","buttonBorder","Header","getValue","pages","value","forEach","element","url","window","location","hash","index","useState","setValue","theme","useTheme","position","Toolbar","Grid","container","justify","item","paragraph","component","color","palette","secondary","main","xs","variant","useMediaQuery","centered","scrollButtons","onClick","indicatorColor","map","page","label","title","to","key","Link","textColor","BodyText","CardText","AboutMeText","AboutMe","spacing","alignItems","gutterBottom","StyledCard","Card","StyledCardActionArea","CardActionArea","StyledIcon","SvgIcon","ClickableCard","icon","description","href","CardContent","style","height","portItems","Portfolio","GitHubIcon","sm","md","lg","StyledGrid","cont","src","width","frameBorder","themeDark","createMuiTheme","background","default","text","primary","typography","useNextVariants","body1","fontWeight","h6","themeLight","App","dark","setDark","StylesProvider","injectFirst","CssBaseline","themeToggle","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b12c0ff.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Tab,\r\n  Tabs,\r\n  Grid,\r\n  withStyles,\r\n  Typography,\r\n  ButtonBase,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  background: linear-gradient(90deg, #FC466B 0%, #3F5EFB 100%);\r\n  padding: 1em;\r\n`;\r\n\r\nconst StyledTab = styled(Tab)`\r\n  text-color: \"#ffffff\";\r\n`;\r\nconst StyledTabs = styled(Tabs)`\r\n`;\r\n\r\nconst Title = styled(Typography)`\r\n  padding-left: 0.5em;\r\n  padding-right:0.5em;\r\n  padding-bottom: 0.15em;\r\n`;\r\n\r\nconst StyledTitleButton = styled(ButtonBase)`\r\n  font-weight: 300;\r\n  font-size: 3em;\r\n  border: 2px solid ${props => props.buttonBorder};\r\n`;\r\n\r\nconst Header = (props) => {\r\n  function getValue(pages) {\r\n    // iterates through pages list to find which value is current\r\n    var value = 0;\r\n    pages.forEach(element => {\r\n      if (`#${element.url}` === window.location.hash) {\r\n        value = element.index;\r\n      }\r\n    });\r\n    return value;\r\n  }\r\n  const pages = props.pages;\r\n  const [value, setValue] = useState(getValue(pages));\r\n  const handleClick = () => {\r\n    setValue(getValue(pages));\r\n  };\r\n  const theme = useTheme();\r\n  return (\r\n    <StyledAppBar position=\"sticky\">\r\n      <Toolbar>\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Title paragraph component={StyledTitleButton}\r\n              color=\"secondary\" buttonBorder={theme.palette.secondary.main} >\r\n              Cole Downey\r\n              </Title>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <StyledTabs\r\n              variant={useMediaQuery('(min-width:800px)') ? \"fullWidth\" : \"scrollable\"}\r\n              value={value}\r\n              centered\r\n              scrollButtons=\"on\"\r\n              onClick={handleClick}\r\n              indicatorColor=\"primary\"\r\n            >\r\n              {pages.map((page) =>\r\n                <StyledTab label={<Typography color=\"primary\" variant=\"button\">{page.title}</Typography>} to={page.url} key={page.index} component={Link} textColor=\"primary\" />)}\r\n            </StyledTabs>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </StyledAppBar >\r\n  );\r\n}\r\n\r\nexport default Header;","import { Typography } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport 'fontsource-roboto/100.css';\r\nimport 'fontsource-roboto/300.css';\r\nimport 'fontsource-roboto/400.css';\r\nimport 'fontsource-roboto/500.css';\r\nimport 'fontsource-roboto/700.css';\r\n\r\nexport const BodyText = styled(Typography)`\r\n  font-size: 1.5rem;\r\n  margin-top: 0em;\r\n`;\r\nexport const CardText = styled(Typography)`\r\n  font-size: 1.25rem;\r\n  margin-top: 0em;\r\n`;\r\n","// I will def structure text blocks better later\r\nconst AboutMeText = [\r\n    \"My name is Cole Downey, and I am a junior at Texas A&M, class of â€™22, pursuing a Computer Science major and a Video Game Development and Design minor. I was born in Denver, Colorado, but grew up in Boise, Idaho. I went to a small IB school with a graduating class size of 59. In high school I played ultimate frisbee and raced in mountain biking and skiing, although those hobbies havenâ€™t followed me to Texas (no mountains here). My favorite hobbies are longboarding, skiing, playing music (ukulele and piano), and playing/creating video games.\",\r\n    \"My family consists of me, my dad, my mom, and my younger twin brothers: Gus and Luke. My dad is pilot, retired from the Air Force, currently flying commercial at United Airlines. My mom is a CPA who is currently a stay at home mom and also works on the board for my old high school. Gus and Luke are seniors at the same school I graduated from, and also like to mountain bike and ski.\",\r\n    \"After graduating, I would like to work in the video game industry, at least to some extent. Iâ€™m currently still deciding if I want to do something like software engineering as my main career and do some indie game dev on the side, or if I want to commit to game dev as my full career. I would prefer to work for a mid-sized game studio, somewhere between a AAA studio and indie studio, although that preference might change before I graduated. Some of my favorite studios and also my top choices to work for are Respawn, Hopoo, Nintendo, and CD Projekt Red. If I end up pursuing the software development route, my dream job would be to work at Spotify or Google.\"\r\n];\r\n\r\nexport default AboutMeText;","import AboutMe from './AboutMe';\r\nexport default AboutMe;","import React from 'react';\r\nimport { Typography, Grid, Box } from \"@material-ui/core\";\r\nimport { BodyText } from '../../components/Typography';\r\nimport AboutMeText from './about-me-text';\r\nimport styled from 'styled-components';\r\n\r\nconst AboutMe = () => {\r\n  return (\r\n    <Grid container\r\n      item\r\n      spacing={6}\r\n      justify=\"center\"\r\n      alignItems=\"flex-start\"\r\n      xs={10}\r\n    >\r\n      <Grid item xs={12}>\r\n        <BodyText variant=\"h6\" gutterBottom>\r\n          Note: this section will go the About Me page when the header links are active, for now it will go here\r\n        </BodyText>\r\n        {AboutMeText.map((paragraph) => (\r\n          <BodyText variant=\"body1\" paragraph>{paragraph}</BodyText>\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport { Typography, Card, CardActionArea, CardContent, CardHeader, Grid, SvgIcon } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { CardText } from './Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StyledCard = styled(Card)`\r\n    background-color: transparent;\r\n    border: 2px solid white;\r\n    border-radius: 0;\r\n    padding: 1em;\r\n    padding-left: 2em;\r\n    height: 100%\r\n`\r\n\r\nconst StyledCardActionArea = styled(CardActionArea)`\r\n    height: 100%;\r\n`\r\nconst StyledIcon = styled(SvgIcon)`\r\n    font-size: 5em;\r\n`\r\n\r\nexport const ClickableCard = (props) => {\r\n    const [icon, title, description, url] = [props.icon, props.title, props.description, props.url];\r\n    return (\r\n        <StyledCardActionArea href={url}>\r\n            <StyledCard>\r\n                <CardContent style={{ height: \"100%\" }}>\r\n                    <Grid container alignItems=\"stretch\" style={{ height: \"100%\" }}>\r\n                        <Grid container spacing=\"6\" alignItems=\"center\">\r\n                            <Grid item >\r\n                                <StyledIcon component={icon} />\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <CardText variant=\"h6\" gutterBottom>\r\n                                    {title}\r\n                                </CardText>\r\n                                <CardText>\r\n                                    {description}\r\n                                </CardText>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </StyledCard>\r\n        </StyledCardActionArea>\r\n    )\r\n}","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { BodyText } from '../../components/Typography';\r\nimport { ClickableCard } from '../../components/Card';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst portItems = [\r\n    {\r\n        title: \"Healthwise Mentor Project\",\r\n        description: \"This is an ASP.NET Core web app with a React front-end. Connects to SQL database hosted by Microsoft Azure.\",\r\n        url: \"https://github.com/cole-downey/HW-Mentor-Project\",\r\n    },\r\n    {\r\n        title: \"Current Unity Project\",\r\n        description: \"This is the main Unity project I'm working on. I started it Summer 2020 during my internship.\",\r\n        url: \"https://github.com/cole-downey/first-unity-project\",\r\n    },\r\n    {\r\n        title: \"Personal Website\",\r\n        description: \"First Project for CSCE 315. Created using React with Google's material ui library.\",\r\n        url: \"https://github.tamu.edu/coledowney-tamu/personal-website\",\r\n    },\r\n]\r\n\r\nconst Portfolio = () => {\r\n    return (\r\n        <Grid container\r\n            spacing={6}\r\n            justify=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n            xs={10}\r\n        >\r\n            <Grid item xs={12}>\r\n                <BodyText variant=\"h3\" paragraph>\r\n                    Click on each card to see the repository\r\n                </BodyText>\r\n                <BodyText variant=\"body1\">\r\n                    Some highlights are shown below:\r\n                </BodyText>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ClickableCard title=\"My GitHub\" description=\"This is my personal GitHub, where you can find my entire portfolio.\"\r\n                    icon={GitHubIcon} url=\"https://github.com/cole-downey\" />\r\n            </Grid>\r\n            {portItems.map((item, key) => (\r\n                <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                    <ClickableCard title={item.title} description={item.description} icon={GitHubIcon} key={key} url={item.url} />\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Portfolio;","import Portfolio from './Portfolio';\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\n// Note: if I can figure out how to work react-pdf with google docs, this would be better than the iframe\r\n// import samplePDF from '../../assets/sample.pdf';\r\n// import { Document, Page, pdfjs } from 'react-pdf';\r\n// const onlinePDF = 'https://cors-anywhere.herokuapp.com/https://drive.google.com/file/d/1ZpaVx2YLMEfQPALeClalHtMp_0NvAts_/preview';\r\n// pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nconst StyledGrid = styled(Grid)`\r\n    margin-top: 2.5em;\r\n`;\r\nconst Qualifications = () => {\r\n    return (\r\n        <Grid container\r\n            item\r\n            spacing={6}\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n            xs={10}\r\n        >\r\n            <StyledGrid item>\r\n                <iframe src=\"https://drive.google.com/file/d/1ZpaVx2YLMEfQPALeClalHtMp_0NvAts_/preview\" width=\"800\" height=\"1040\" frameBorder=\"0\"></iframe>\r\n            </StyledGrid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Qualifications;","import AboutMe from '../containers/about-me';\r\nimport Portfolio from '../containers/portfolio';\r\nimport Qualifications from '../containers/qualifications';\r\nimport Service from '../containers/service-page';\r\nimport Landing from '../containers/landing';\r\n\r\nexport const pages = [\r\n    {\r\n        url: '/',\r\n        title: \"Home\",\r\n        index: 0,\r\n        cont: Landing,\r\n    }, {\r\n        url: '/about',\r\n        title: \"About Me\",\r\n        index: 1,\r\n        cont: AboutMe,\r\n    }, {\r\n        url: '/portfolio',\r\n        title: \"Portfolio\",\r\n        index: 2,\r\n        cont: Portfolio,\r\n    }, {\r\n        url: '/qualifications',\r\n        title: \"Qualifications\",\r\n        index: 3,\r\n        cont: Qualifications,\r\n    }, {\r\n        url: '/service',\r\n        title: \"Service\",\r\n        index: 4,\r\n        cont: Service,\r\n    },\r\n];","import React from 'react';\r\nimport { Typography, Grid, Box } from \"@material-ui/core\";\r\nimport { BodyText } from '../../components/Typography';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <Grid container\r\n            spacing={6}\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            xs={10}\r\n        >\r\n            <Grid item xs={4}>\r\n                <BodyText>Landing Page</BodyText>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { BodyText } from '../../components/Typography';\r\n\r\nconst Service = () => {\r\n    return (\r\n        <Grid container\r\n            spacing={6}\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n            xs={10}\r\n        >\r\n            <Grid item xs={12}>\r\n                <BodyText variant=\"p\" paragraph>\r\n                    This is my service page.\r\n                </BodyText>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Service;","import { createMuiTheme } from '@material-ui/core';\r\n\r\nexport const themeDark = createMuiTheme({\r\n    palette: {\r\n        background: {\r\n            default: \"#222222\"\r\n        },\r\n        text: {\r\n            primary: \"#ffffff\",\r\n            secondary: \"#222222\"\r\n        },\r\n        primary: {\r\n            main: \"#ffffff\",\r\n        },\r\n        secondary: {\r\n            main: \"#222222\",\r\n        },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        body1: {\r\n            fontWeight: 100,\r\n        },\r\n        h6: {\r\n            fontWeight: 400,\r\n        }\r\n    }\r\n});\r\nexport const themeLight = createMuiTheme({\r\n    palette: {\r\n        background: {\r\n            default: \"#ffffff\"\r\n        },\r\n        text: {\r\n            primary: \"#222222\",\r\n            secondary: \"#ffffff\"\r\n        },\r\n        primary: {\r\n            main: \"#222222\",\r\n        },\r\n        secondary: {\r\n            main: \"#ffffff\",\r\n        },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        body1: {\r\n            fontWeight: 300,\r\n        },\r\n        h6: {\r\n            fontWeight: 400,\r\n        }\r\n    }\r\n});","import React, { useState } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Header from './components/Header';\nimport { pages } from './utils/pagesList';\nimport { themeDark, themeLight } from './components/Theme';\nimport { StylesProvider, Grid, MuiThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst StyledGrid = styled(Grid)`\n  margin-top 2.5em;\n`\nfunction App() {\n  const [dark, setDark] = useState(true);\n  function toggleTheme() {\n    setDark(!dark);\n  }\n  return (\n    <StylesProvider injectFirst>\n      <MuiThemeProvider theme={(dark) ? themeDark : themeLight}>\n        <CssBaseline />\n        <Router>\n          <Header pages={pages} themeToggle={toggleTheme} />\n          <StyledGrid container justify=\"center\">\n            <Switch>\n              {pages.map((page) => (\n                <Route exact path={page.url} key={page.index} component={page.cont} />\n              ))}\n            </Switch>\n          </StyledGrid>\n        </Router>\n      </MuiThemeProvider>\n    </StylesProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}